<xref>
  <whenMade>1408628325985</whenMade>
  <createdBy>JBehave</createdBy>
  <metaFilter></metaFilter>
  <meta>
    <string>dummy=</string>
  </meta>
  <stories>
    <story>
      <description></description>
      <narrative>In order to have more understandable scenarios
As a application user
I want to be able to create composite steps
</narrative>
      <name>compositeClasses.story</name>
      <path>file:data/stories/tcbdd/composites/compositeClasses.story</path>
      <html>compositeClasses.html</html>
      <meta></meta>
      <scenarios>Scenario:Can create new composites class
When Web user sets value TestComposites to the element className
When Web user clicks the element createNewClass
Then Web user is in the New Composites screen


Scenario:Can open an existing composites class
When Web user clicks the element text:TcBddComposites
Then Web user is in the View Composites screen


Scenario:Can filter composites classes
When Web user sets value TcBddComposites to the element className
Then Web element text:TcBddComposites is visible
When Web user sets value NonExistentComposites to the element className
Then Web element text:TcBddComposites is NOT visible


Scenario:Can close the composites modal screen
Then Web user is in the composites modal screen
When Web user clicks the element closeComposites
Then Web user is in the home screen


Scenario:Must have valid composites class name (cannot start with a number, cannot have space character)
When Web user sets value &lt;className&gt; to the element className
Then Web element compositeClassError is visible


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627505582</started>
      <duration>19403</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to have more understandable scenarios
As a application user
I want to be able to create composite steps
</narrative>
      <name>compositesForm.story</name>
      <path>file:data/stories/tcbdd/composites/compositesForm.story</path>
      <html>compositesForm.html</html>
      <meta></meta>
      <scenarios>Scenario:Can display the name of the selected composite class
Then Web element className should have value @className


Scenario:Can create new composite
When Web user clicks the element addNewComposite
When Web user sets value Given I can create new composite to the element compositeText
Then Web element composites should have text Given I can create new composite


Scenario:Can list composites
Then Web element composites should have text @compositeText


Scenario:Can filter composites
When Web user sets value Given this composite does NOT exist to the element compositeTextFilter
Then Web element text:@compositeText is NOT visible
When Web user sets value @compositeText to the element compositeTextFilter
Then Web element text:@compositeText exists


Scenario:Can edit composite class name
When Web user sets value ThisIsNewCompositesClass to the element className
Then Web element className should have value ThisIsNewCompositesClass


Scenario:Can edit composite name
When Web user clicks the element text:@compositeText
When Web user sets value When composite text is changed to the element compositeText
Then Web element composites should have text When composite text is changed


Scenario:Can add, move and remove composite steps
When Web user clicks the element addNewComposite
Then Web element compositeStep1 exists
When Web user sets value When I set the first composite step to the element compositeStep1
When Web user clicks the element addNewCompositeStep
Then Web element compositeStep2 exists
When Web user sets value When I set the second composite step to the element compositeStep2
When Web user drags the element dragCompositeStep2 to the dragCompositeStep1
Then Web element compositeStep1 should have value When I set the second composite step
When Web user clicks the element removeCompositeStep2
Then Web element compositeStep2 is NOT visible
When Web user clicks the element removeCompositeStep1
Then Web element compositeStep1 is NOT visible


Scenario:Can edit composite steps
When Web user clicks the element composite1
Then Web element compositeStep1 is enabled


Scenario:Can delete composite
When Web user clicks the element deleteComposite1
Then Web element composite1 is NOT visible


Scenario:Can use code-complete on composite steps
When Web user clicks the element addNewComposite
When Web user clicks the element addNewCompositeStep
When Web user sets value Then variable to the element compositeStep1
When Web user presses the enter key in the element compositeStep1
Then Web element compositeStep1 should have value Then variable $key has value $value


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627525019</started>
      <duration>60711</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to have more understandable scenarios
As a application user
I want to be able to create composite steps
</narrative>
      <name>compositesOperations.story</name>
      <path>file:data/stories/tcbdd/composites/compositesOperations.story</path>
      <html>compositesOperations.html</html>
      <meta></meta>
      <scenarios>Scenario:Can create new composites
Given Web user is in the New Composites screen
Then File composites/@className.groovy does NOT exist
When Web user clicks the element saveComposites
Then File composites/@className.groovy exists


Scenario:Can revert changes
When Web user sets value Given I can modify the composite to the element compositeText
When Web user clicks the element revertComposites
Then Web element className should NOT have text Given I can modify the composite


Scenario:Can delete composites class
When Web user clicks the element deleteComposites
When Web user clicks the element ok
Then File composites/@className.groovy does NOT exist


Scenario:Can update existing composites
When Web user sets value Given I can update composites to the element compositeText


Scenario:Can NOT revert changes when composites are unchanged
Then Web element revertComposites is disabled


Scenario:Can NOT delete new composites class before it is saved for the first time
Given Web user is in the New Composites screen
Then Web element deleteComposites is NOT visible


Scenario:Can NOT save composites when there are validation errors
When Web user clears the element compositeText
Then Web element saveComposites is disabled


Scenario:Can NOT save when composites are unchanged
Then Web element saveComposites is disabled


Scenario:Can not modify the name of an existing composites class
Given Web user is in the View Composites screen
Then Web element className is disabled


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627585764</started>
      <duration>40010</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to have more understandable scenarios
As a application user
I want to be able to create composite steps
</narrative>
      <name>compositesValidations.story</name>
      <path>file:data/stories/tcbdd/composites/compositesValidations.story</path>
      <html>compositesValidations.html</html>
      <meta></meta>
      <scenarios>Scenario:Composites class name is required
When Web user clears the element className
Then Web element saveComposites is disabled


Scenario:Composite is required
When Web user clears the element compositeText
Then Web element saveComposites is disabled


Scenario:Composite must start with Given, When or Then
When Web user sets value This text does not start with Given, When or Then to the element compositeText
Then Web element compositeTextError should have text Step must start with Given, When or Then words.
Then Web element saveComposites is disabled


Scenario:Composite step is required
When Web user clears the element compositeStep1
Then Web element saveComposites is disabled


Scenario:Composite step must start with Given, When or Then
When Web user sets value This text does not start with Given, When or Then to the element compositeStep1
Then Web element compositeStepsError should have text All steps must start with Given, When or Then words.
Then Web element saveComposites is disabled


Scenario:Composite must use valid parameters naming
When Web user sets value &lt;step&gt; to the element compositeText
When Web user clicks the element saveComposites
Then Web element errorText should have text &lt;errorText&gt;


Scenario:Composites class name must be valid
When Web user sets value &lt;classNameValue&gt; to the element className
Then Web element classNameError should have text Class name cannot start with a number, but after the initial character it may use any combination of letters and digits, underscores or dollar signs.
Then Web element saveComposites is disabled


Scenario:Composite must contain at least one step
When Web user clicks the element removeCompositeStep1
Then Web element compositeStepsError should have text At least one step must be defined.


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627625830</started>
      <duration>46994</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to 
As a 
I want to 
</narrative>
      <name>dummy.story</name>
      <path>file:data/stories/tcbdd/dummy.story</path>
      <html>dummy.html</html>
      <meta></meta>
      <scenarios>Scenario:Dummy scenario 1
Given variable myVariable has value My value


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627672864</started>
      <duration>227</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to be able to provide personalized experience
As a application user
I want to be able to identify myself
</narrative>
      <name>login.story</name>
      <path>file:data/stories/tcbdd/login/login.story</path>
      <html>login.html</html>
      <meta></meta>
      <scenarios>Scenario:Should have all fields
Then Web element username is visible
Then Web element password is visible
Then Web element login is visible


Scenario:Should have username required
When Web user sets value myPassword to the element password
Then Web element login is disabled


Scenario:Should have password required
When Web user sets value myUsername to the element username
Then Web element login is disabled


Scenario:Should redirect to the confirmation screen
Given Web user myUsername with password myPassword exists
When Web user myUsername logs in with password myPassword
Then Web user is in the Welcome screen


Scenario:Should display error message when user does not exist
Given Web user myUsername does NOT exists
When Web user myUsername logs in with password myPassword
Then Web element message should have text Specified username and/or password is incorrect


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627673141</started>
      <duration>11125</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to be able to access all functionalities
As a application user
I want to have the navigation menu
</narrative>
      <name>navigationMenu.story</name>
      <path>file:data/stories/tcbdd/navigation/navigationMenu.story</path>
      <html>navigationMenu.html</html>
      <meta>sho=
</meta>
      <scenarios>Scenario:Top menu should have navigation links
Then Web element browseStories should have text Browse Stories
Then Web element browseComposites should have text Browse Composites
Then Web element runner should have text Run Stories


Scenario:Has link to the home screen (New Story)
When Web user clicks the element pageTitle
Then Web element pageTitle should have text Home


Scenario:Has link to the Browse Stories screen
When Web user clicks the element browseStories
Then Web user is in the stories modal screen


Scenario:Has link to the Browse Composites screen
When Web user clicks the element browseComposites
Then Web user is in the composites modal screen


Scenario:Has link to the Run Stories screen
When Web user clicks the element runner
Then Web user is in the Runner Selector modal screen


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627684365</started>
      <duration>7302</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to verify behaviours
As a application user
I want to be able to run story and see results
</narrative>
      <name>runnerSingleStory.story</name>
      <path>file:data/stories/tcbdd/runners/runnerSingleStory.story</path>
      <html>runnerSingleStory.html</html>
      <meta></meta>
      <scenarios>Scenario:Can run story
Given Web user is in the Story page with all successful steps
When Web single story runner is run
Then story is running


Scenario:Can NOT run multiple stories
Given Web user is in the Story page with all successful steps
When Web single story runner is run
Then Web element runStory is disabled


Scenario:Has progress bar
Given Web user is in the Story page with all successful steps
When Web single story runner is run
Then Web element runnerStatus should have text Story run is in progress


Scenario:Has parameters dialog
Given Web user is in the Story page with all successful steps
When Web user clicks the element runStory
Then Web element modalHeader is visible


Scenario:Can retrieve values of last parameters used
Given Web user is in the Story page with all successful steps
When Web user clicks the element runStory
When Web user selects Phantom JS from the dropdown list webStepsBrowserOption
When Web user sets value http://localhost:9000 to the element webStepsUrl
When Web user clicks the element confirmRunStory
Given Web timeout is 60 seconds
Then Web element runnerStatus should have text Story run was successful
When Web user clicks the element runStory
Then Web dropdown list webStepsBrowserOption has Phantom JS selected
Then Web element webStepsUrl should have value http://localhost:9000


Scenario:Can display successful status
Given Web user is in the Story page with all successful steps
When Web single story runner is run
Then Web element runnerStatus should have text Story run was successful


Scenario:Can display the list of pending steps
Given Web user is in the Story screen with pending steps
When Web single story runner is run
Then Web element pendingSteps is visible
Then Web element pendingStep1 is visible


Scenario:Can display runner reports
Given Web user is in the Story page with all successful steps
When Web single story runner is run
Then Web element runnerReports is visible


Scenario:Can cancel story runner from the parameters dialog
Given Web user is in the Story page with all successful steps
When Web user clicks the element runStory
When Web user clicks the element cancelRunStory
Then Web element modalHeader is NOT visible


Scenario:Can display failed status
Given Web user is in the Story page with failed steps
When Web single story runner is run
Then Web element runnerStatus should have text Story run failed


Scenario:Can display pending status
Given Web user is in the Story screen with pending steps
When Web single story runner is run
Then Web element runnerStatus should have text Story run was successful with 1 pending steps


Scenario:Pending steps are links to composites page
Given Web user is in the Story screen with pending steps
When Web single story runner is run
When Web user clicks the element pendingStep1
Then Web user is in the composites modal screen


Scenario:Can choose which browser to run from a dropdown list
Given Web user is in the Story page with all successful steps
When Web user clicks the element runStory
When Web user selects Mozilla Firefox from the dropdown list webStepsBrowserOption
When Web user selects Phantom JS from the dropdown list webStepsBrowserOption
Then Web dropdown list webStepsBrowserOption has Phantom JS selected


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627691724</started>
      <duration>307118</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to perform regression
As a application user
I want to run all selected stories
</narrative>
      <name>runnerStories.story</name>
      <path>file:data/stories/tcbdd/runners/runnerStories.story</path>
      <html>runnerStories.html</html>
      <meta></meta>
      <scenarios>Scenario:Should display directories with selectors
Then Web element directory1 is visible
Then Web element directory1Selector is visible


Scenario:Should display stories with selectors
Then Web element story1 is visible
Then Web element story1Selector is visible


Scenario:Can cancel the dialog
When Web user clicks the element cancelRunnerSelector
Then Web element modalHeader is NOT visible


Scenario:Can move to the parameters dialog
When Web user clicks the element story1Selector
When Web user clicks the element okRunnerSelector
Then Web element modalHeader should have text Runner Parameters


Scenario:Can run selected stories
When Web user clicks the element story1Selector
When Web user clicks the element okRunnerSelector
When Web user clicks the element confirmRunStory
Then stories are running
Then stories are NOT running


Scenario:Should display runner reports link
When Web user clicks the element story1Selector
When Web user clicks the element okRunnerSelector
When Web user clicks the element confirmRunStory
Given Web timeout is 60 seconds
Then Web element runnerReports is visible


Scenario:Should display the current path
Then Web element path should have text testDirectory


Scenario:Can go back to the parent directory
When Web user clicks the element text:testSubDirectory
When Web user clicks the element prevDirectory
Then Web element path should have text testDirectory


Scenario:Can NOT move to parameters dialog without at least one directory or story selected
Then Web element okRunnerSelector is disabled


Scenario:Runner Parameters confirm button should have text Run
When Web user clicks the element story1Selector
When Web user clicks the element okRunnerSelector
Then Web element confirmRunStory should have text Run


Scenario:Multiple runners can be executed one after another
When Web user clicks the element cancelRunnerSelector
When Web user clicks the element runner
Then Web user is in the Runner Selector modal screen


Scenario:Parameters dialog should have API info
When Web user clicks the element story1Selector
When Web user clicks the element okRunnerSelector
When Web user clicks the element getApi
Then Web element api is visible


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408627998887</started>
      <duration>145272</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to open existing and create new stories
As a application user
I want to be able to browse files and directories
</narrative>
      <name>storiesBrowse.story</name>
      <path>file:data/stories/tcbdd/stories/storiesBrowse.story</path>
      <html>storiesBrowse.html</html>
      <meta>dummy=
</meta>
      <scenarios>Scenario:Can open dialog
Given Web home page is opened
When Web user clicks the element browseStories
Then Web user is in the stories modal screen


Scenario:Can navigate through directories
Given Web user is in the Browse Stories dialog
When Web user clicks the element text:testDirectory
Then Web element path should have text testDirectory


Scenario:Can display stories
Given Web user is in the Browse Stories dialog
When Web user clicks the element text:testDirectory
Then Web element text:testStory exists


Scenario:Can open story
Given Web user is in the Browse Stories dialog
When Web user clicks the element text:testDirectory
When Web user clicks the element text:testStory
Then Web element pageTitle should have text View Story


Scenario:Can create new story
Given Web user is in the Browse Stories dialog
When Web user clicks the element createNewStory
Then Web element pageTitle should have text New Story


Scenario:Can delete story
Given Web user is in the Browse Stories dialog
When Web user clicks the element text:testDirectory
When Web user clicks the element deletetestStory
When Web user clicks the element ok
Then Web element text:testStory disappeared


Scenario:Can create new directory
Given Web user is in the Browse Stories dialog
When Web user sets value newTestDirectory to the element searchStories
When Web user clicks the element createNewDirectory
Then Web element text:newTestDirectory appears


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408628144215</started>
      <duration>17798</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to create and modify stories
As a application user
I want to be able to add and modify story information through the form
</narrative>
      <name>storyEditorForm.story</name>
      <path>file:data/stories/tcbdd/stories/storyEditorForm.story</path>
      <html>storyEditorForm.html</html>
      <meta></meta>
      <scenarios>Scenario:Has name field
Then Web element storyName is visible


Scenario:Has description field
Then Web element storyDescription is visible


Scenario:Has meta fields
When Web user clicks the element addStoryMeta
Then Web element storyMeta1 is visible


Scenario:Has narrative fields
Then Web element storyNarrativeInOrderTo is visible
Then Web element storyNarrativeAsA is visible
Then Web element storyNarrativeIWantTo is visible


Scenario:Has given stories
When Web user clicks the element addStoryGivenStory
Then Web element storyGivenStory1 is visible


Scenario:Has lifecycle fields
When Web user clicks the element addStoryLifecycleBeforeStep
Then Web element storyLifecycleBeforeStep1 is visible
When Web user clicks the element addStoryLifecycleAfterStep
Then Web element storyLifecycleAfterStep1 is visible


Scenario:Has scenario title
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
Then Web element scenario1Title is visible


Scenario:Has scenario meta
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
When Web user clicks the element addScenario1Meta
Then Web element scenario1Meta1 is visible


Scenario:Has scenario steps
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
When Web user clicks the element addScenario1Step
Then Web element scenario1Step1 is visible


Scenario:Has scenario examples
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
Then Web element scenario1Examples is visible


Scenario:Can add, move and remove story elements
When Web user clicks the element &lt;addButton&gt;
When Web user clicks the element &lt;addButton&gt;
When Web user sets value this is value 1 to the element &lt;element1&gt;
When Web user sets value this is value 2 to the element &lt;element2&gt;
When Web user drags the element &lt;dragButton2&gt; to the &lt;dragButton1&gt;
Then Web element &lt;element1&gt; should have value this is value 2
When Web user clicks the element &lt;removeButton1&gt;
Then Web element &lt;element2&gt; is NOT visible
When Web user clicks the element &lt;removeButton1&gt;
Then Web element &lt;element1&gt; is NOT visible


Scenario:Can add, move and remove scenario steps
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
When Web user clicks the element addScenario1Step
When Web user sets value When I drag and drop to the element scenario1Step1
When Web user clicks the element addScenario1Step
When Web user sets value Then everything is just great to the element scenario1Step2
When Web user drags the element dragScenario1Step2 to the dragScenario1Step1
Then Web element scenario1Step1 should have value Then everything is just great
When Web user clicks the element removeScenario1Step1
Then Web element scenario1Step2 is NOT visible
When Web user clicks the element removeScenario1Step1
Then Web element scenario1Step1 is NOT visible


Scenario:Steps have auto-complete function
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
When Web user clicks the element addScenario1Step
When Web user sets value Then variable to the element scenario1Step1
When Web user presses the enter key in the element scenario1Step1
Then Web element scenario1Step1 should have value Then variable $key has value $value


Scenario:Can add steps using the ENTER key
When Web user clicks the element addScenario
When Web user clicks the element scenario1Panel
When Web user clicks the element addScenario1Step
When Web user presses the enter key in the element scenario1Step1
Then Web element scenario1Step2 is visible


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408628162045</started>
      <duration>78297</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to 
As a 
I want to 
</narrative>
      <name>storyEditorOperations.story</name>
      <path>file:data/stories/tcbdd/stories/storyEditorOperations.story</path>
      <html>storyEditorOperations.html</html>
      <meta></meta>
      <scenarios>Scenario:Can save new story
Given Web user is in the New Story screen
When Web user clicks the element expandPanels
When Web user fills in the new story form
When Web user adds scenario to the story form
When Web user clicks the element saveStory
Then Web story is saved


Scenario:Can update an existing story
Given Web user is in the View Story page
When Web user fills in the existing story form
When Web user clicks the element saveStory
Then Web story is saved


Scenario:Can revert changes
Given Web user is in the View Story page
When Web user fills in the existing story form
When Web user clicks the element revertStory
Then Web story is reverted to the original version


Scenario:Can delete story
Given Web user is in the View Story page
When Web user clicks the element deleteStory
When Web user clicks the element ok
Then Web story is deleted


Scenario:Can rename story
Given Web user is in the View Story page
When Web user sets value storyNameRenamed to the element storyName
When Web user clicks the element saveStory
Then Web story is renamed


Scenario:Can NOT save story when data is intact
Given Web user is in the View Story page
Then Web element saveStory is disabled


Scenario:Can NOT revert changes is data is intact
Given Web user is in the View Story page
Then Web element revertStory is disabled


Scenario:Can NOT delete new story before it is saved
Given Web user is in the New Story screen
Then Web element deleteStory is disabled


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408628240388</started>
      <duration>58596</duration>
    </story>
    <story>
      <description></description>
      <narrative>In order to have valid stories
As a application user
I want to have my entries validated
</narrative>
      <name>storyEditorValidations.story</name>
      <path>file:data/stories/tcbdd/stories/storyEditorValidations.story</path>
      <html>storyEditorValidations.html</html>
      <meta></meta>
      <scenarios>Scenario:Name value is required
When Web user clears the element storyName
Then Web element invalidForm is visible


Scenario:Story meta, given story and lifecycle step values are required
When Web user clicks the element &lt;addElement&gt;
When Web user sets value some value to the element &lt;element&gt;
When Web user clears the element &lt;element&gt;
Then Web element invalidForm is visible


Scenario:Scenario meta value is required
When Web user clicks the element scenario1Panel
When Web user clicks the element &lt;addElement&gt;
When Web user sets value &lt;value&gt; to the element &lt;element&gt;
When Web user clears the element &lt;element&gt;
Then Web element invalidForm is visible


</scenarios>
      <passed>true</passed>
      <pending>false</pending>
      <started>1408628299017</started>
      <duration>23830</duration>
    </story>
  </stories>
  <stepMatches/>
</xref>